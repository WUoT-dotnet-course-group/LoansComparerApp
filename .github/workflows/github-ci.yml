name: Build and test

on:
  pull_request:
    branches: ["main"]

env:
  CONFIGURATION: Debug
  NODE_VERSION: "16.x"
  DOTNET_VERSION: 6.0.x
  PROJECT_DIRECTORY: Src
  FRONTEND_DIRECTORY: Src/LoansComparer.WebClient
  BACKEND_DIRECTORY: Src/LoansComparer.Presentation

concurrency:
  group: build

jobs:
  dotnet-format:
    runs-on: windows-latest
    permissions:
      contents: read
      pull-request: read

    steps:
      - name: Get branch info
        id: branch-info
        uses: xt0rted/pull-request-comment-branch@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Custom dotnet code formatting
        run: |
          dotnet-format whitespace --severity info
          dotnet-format style --severity info

      - name: Commit files
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "25436629+github-actions[bot]@users.noreply.github.com"
          git commit -a -m 'Automated dotnet-format update
          Co-authored-by: ${{ github.event.comment.user.login }} <${{ github.event.comment.user.id }}+${{ github.event.comment.user.login }}@users.noreply.github.com>'

      - name: Push changes
        uses: ad-m/github-push-action@v0.5.0
        with:
          branch: ${{ steps.branch-info.outputs.ref }}
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  build:
    runs-on: windows-latest
    needs: dotnet-format

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "${{ env.FRONTEND_DIRECTORY }}/package-lock.json"

      - name: Npm install
        run: npm install
        working-directory: ${{ env.FRONTEND_DIRECTORY }}

      - name: Restore dependencies
        run: dotnet restore "${{ env.PROJECT_DIRECTORY }}"

      - name: Build
        run: dotnet build "${{ env.PROJECT_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test "${{ env.PROJECT_DIRECTORY }}" --no-build
